@use '../variables' as *;
@use '../mixins' as *;
@use '../animations' as *;

.projects {
    position: relative;
    width: 100%;
    height: 100vh;

    h2 {
        position: absolute;
        top: 70%;
        left: 2%;
        font-size: 5vw;
        color: $primary-color;
        text-shadow: $sun-glow;
        white-space: nowrap;
    }

    &>img {
        width: 100%;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        mask-image: radial-gradient(ellipse 70% 45% at 50% 50%, black 40%, transparent 75%);
    }

    .content {
        position: relative;
        top: 51%;
        left: 48%;
        transform: translateY(-50%);
        width: 50%;
        height: auto;
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        gap: 3%;
        justify-content: center;
        align-content: center;
    }

    @include portrait {
        h2 {
            top: 87.5%;
            left: 50%;
            font-size: calc(3vw + 3vh);
        }

        .content {
            transform: translate(-50%, -50%);
            left: 50%;
            width: 80%;
        }
    }

    @include min-aspect($wide) {
        .content {
            top: 53%;
        }
    }

    @include min-aspect($ultra-wide) {
        h2 {
            top: 85%;
        }

        .content {
            top: 51%;
            left: 63%;
            width: 35%;
        }
    }
}

.project {
    background-color: rgba(31, 31, 30, 0.6);
    backdrop-filter: blur(calc(.25vh + .25vw));
    border: 3px solid #DFC691;
    box-shadow: 0 0 3px rgba(255, 255, 255, 0.8),
        0 0 10px rgba(255, 223, 186, 0.7),
        0 0 20px rgba(255, 165, 0, 0.5),
        0 0 30px rgba(255, 69, 0, 0.3);
    border-radius: calc(1vw + 1vh);
    padding: 2% 5% 2% 5%;
    @include flex_c(space-between, flex-start);
    gap: 20px 0;

    .techs {

        @include flex_r(flex-start, center);
        gap: 0 5%;

        span {
            color: $secondary-color;
            font-size: calc(0.65vw + 0.25vh);
            font-weight: 600;
        }
    }

    img {
        position: relative;
        left: 50%;
        transform: translateX(-50%);
        width: 70%;
        border-radius: 1vw;
        box-shadow: 0px 0px 15px #DFC691;
    }

    h3 {
        font-size: calc(1.25vw + 0.5vh);
        color: $primary-color;
    }

    p {
        color: $secondary-color;
        font-size: calc(0.75vw + 0.5vh);
    }

    a {
        color: transparent;
        background: linear-gradient(to right, #A98A62, #DFC691) text;
        text-transform: capitalize;
        padding: 6px 15px 6px 15px;
        font-size: calc(1vw + 0.5vh);
        font-weight: bold;
        position: relative;
        border: none;
        text-decoration: none;
        cursor: pointer;
        transition: all ease-in 300ms;

        &::before {
            content: "";
            position: absolute;
            inset: 0;
            border-radius: 10px;
            padding: 3px;
            background: linear-gradient(to right, #A98A62, #DFC691);
            mask:
                linear-gradient(#000 0 0) content-box,
                linear-gradient(#000 0 0);
            mask-composite: exclude;
        }

        &:hover {
            transform: scale(0.95);
        }
    }

    &:first-child {
        grid-column: 1 / 3;
    }

    &:nth-child(2) {
        grid-column: 3 / 5;
    }

    &:last-child {
        grid-column: 2 / 4;
    }

    @include portrait {
        .techs {
            span {
                font-size: calc(0.6vw + 0.6vh);
            }
        }

        img {
            width: 75%;
        }

        h3 {
            font-size: calc(1.5vw + 0.75vh)
        }

        p {
            font-size: calc(0.75vw + 0.75vh);
        }

        a {
            font-size: calc(1vw + 0.75vh);
        }
    }

    @include min-aspect($ultra-wide) {
        .techs {
            span {
                font-size: calc(0.5vw + 0.2vh);
            }
        }

        img {
            width: 65%;
        }

        h3 {
            font-size: calc(1vw + 0.25vh);
        }

        p {
            font-size: calc(0.5vw + 0.5vh);
        }

        a {
            font-size: calc(0.75vw + 0.5vh);
        }
    }
}